// <auto-generated />
using System;
using ExtraClasesApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExtraClasesApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250723112652_CrearTablaNotificaciones")]
    partial class CrearTablaNotificaciones
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExtraClasesApp.Models.ClaseExtra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EstudianteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaHoraEstudiante")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaHoraTutor")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Leccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ModuloId")
                        .HasColumnType("integer");

                    b.Property<bool>("Notificado")
                        .HasColumnType("boolean");

                    b.Property<int>("TutorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("ModuloId");

                    b.HasIndex("TutorId");

                    b.ToTable("ClasesExtras");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailPadre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoPadre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TutorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.MensajeEnviado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClaseExtraId")
                        .HasColumnType("integer");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destinatario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TutorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClaseExtraId");

                    b.HasIndex("TutorId");

                    b.ToTable("MensajesEnviados");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destinatario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TutorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.PreferenciasTutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("HoraResumenDiario")
                        .HasColumnType("interval");

                    b.Property<bool>("RecibirNotificacionesEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("RecibirNotificacionesSMS")
                        .HasColumnType("boolean");

                    b.Property<int>("TutorId")
                        .HasColumnType("integer");

                    b.Property<string>("ZonaHoraria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("PreferenciasTutores");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tutores");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.ClaseExtra", b =>
                {
                    b.HasOne("ExtraClasesApp.Models.Estudiante", "Estudiante")
                        .WithMany("ClasesExtra")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExtraClasesApp.Models.Modulo", null)
                        .WithMany("ClasesExtra")
                        .HasForeignKey("ModuloId");

                    b.HasOne("ExtraClasesApp.Models.Tutor", "Tutor")
                        .WithMany("ClasesExtra")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.Estudiante", b =>
                {
                    b.HasOne("ExtraClasesApp.Models.Tutor", "Tutor")
                        .WithMany("Estudiantes")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.MensajeEnviado", b =>
                {
                    b.HasOne("ExtraClasesApp.Models.ClaseExtra", "ClaseExtra")
                        .WithMany()
                        .HasForeignKey("ClaseExtraId");

                    b.HasOne("ExtraClasesApp.Models.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId");

                    b.Navigation("ClaseExtra");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.Notificacion", b =>
                {
                    b.HasOne("ExtraClasesApp.Models.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.PreferenciasTutor", b =>
                {
                    b.HasOne("ExtraClasesApp.Models.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.Estudiante", b =>
                {
                    b.Navigation("ClasesExtra");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.Modulo", b =>
                {
                    b.Navigation("ClasesExtra");
                });

            modelBuilder.Entity("ExtraClasesApp.Models.Tutor", b =>
                {
                    b.Navigation("ClasesExtra");

                    b.Navigation("Estudiantes");
                });
#pragma warning restore 612, 618
        }
    }
}
