@model ExtraClasesApp.Models.ViewModels.DashboardViewModel
@using System.Text.Encodings.Web
@{
    ViewData["Title"] = "Dashboard";
    var jsonLabels = System.Text.Json.JsonSerializer.Serialize(Model.ChartLabels);
    var jsonClases = System.Text.Json.JsonSerializer.Serialize(Model.ChartClases);
    var jsonNotis = System.Text.Json.JsonSerializer.Serialize(Model.ChartNotis);
}

<h1 class="mb-4">Dashboard - Estadísticas</h1>

<div class="row mb-4">
    <div class="col-md-12">
        <form method="get" class="row g-3 align-items-end">
            <div class="col-sm-4">
                <label class="form-label">Desde</label>
                <input type="date" name="desde" value="@Model.Desde" class="form-control" />
            </div>
            <div class="col-sm-4">
                <label class="form-label">Hasta</label>
                <input type="date" name="hasta" value="@Model.Hasta" class="form-control" />
            </div>
            <div class="col-sm-4">
                <button type="submit" class="btn btn-primary w-100">Filtrar</button>
            </div>
        </form>
    </div>
</div>

<div class="row text-white mb-5">
    <div class="col-md-3">
        <div class="card bg-primary shadow">
            <div class="card-body">
                <h5 class="card-title">Tutores</h5>
                <h2 class="card-text">@Model.TotalTutores</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success shadow">
            <div class="card-body">
                <h5 class="card-title">Estudiantes</h5>
                <h2 class="card-text">@Model.TotalEstudiantes</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info shadow">
            <div class="card-body">
                <h5 class="card-title">Clases</h5>
                <h2 class="card-text">@Model.TotalClases</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning shadow">
            <div class="card-body">
                <h5 class="card-title">Notificaciones</h5>
                <h2 class="card-text">@Model.TotalNotificaciones</h2>
            </div>
        </div>
    </div>
</div>

<h3 class="mb-3">Actividades por día</h3>
<canvas id="chartEstadisticas" height="100"></canvas>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const labels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.ChartLabels));
        const dataClases = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.ChartClases));
        const dataNotis = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.ChartNotis));

        const ctx = document.getElementById('chartEstadisticas').getContext('2d');

        const chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Clases Extras',
                        data: dataClases,
                        backgroundColor: 'rgba(54, 162, 235, 0.6)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Notificaciones',
                        data: dataNotis,
                        type: 'line',
                        fill: false,
                        borderColor: 'rgba(255, 206, 86, 1)',
                        backgroundColor: 'rgba(255, 206, 86, 0.5)',
                        tension: 0.3
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top'
                    },
                    title: {
                        display: true,
                        text: 'Actividades diarias entre el rango seleccionado'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0
                        }
                    }
                }
            }
        });
    </script>
}
